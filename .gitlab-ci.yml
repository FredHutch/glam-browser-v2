
before_script:
  - curl -LO https://releases.rancher.com/cli/v0.6.2/rancher-linux-amd64-v0.6.2.tar.gz
  - tar zxf rancher-linux-amd64-v0.6.2.tar.gz
  
build_test:
  script:
    - docker build -t dockerimages.fhcrc.org/glam-browser-v2:latest .
    - |
        if docker ps -a|tr -s ' '|rev|cut -d ' ' -f 1|rev|grep -q glam-browser-v2
        then
        docker stop glam-browser-v2 && docker rm --force glam-browser-v2 && sleep 15
        fi
    - >-
        docker run 
        -e DB_NAME=$DB_NAME
        -e DB_USERNAME=$DB_USERNAME
        -e DB_PASSWORD=$DB_PASSWORD
        -e DB_HOST=$DB_HOST
        -e DB_PORT=$DB_PORT
        -e S3_BUCKET=$S3_BUCKET
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        -e AWS_REGION=$AWS_REGION
        -e GTM_CONTAINER=$GTM_CONTAINER
        -d 
        --name glam-browser-v2 
        -p 8050:8050 
        dockerimages.fhcrc.org/glam-browser-v2:latest
    - sleep 15
    - docker logs glam-browser-v2
    - curl -I http://localhost:8050 | grep -q "HTTP/1.1 200 OK"
    - docker stop glam-browser-v2 && docker rm --force glam-browser-v2 
  
deploy:
  stage: deploy
  only:
    refs:
       - master
  script:
    - docker login --username $DOCKERIMAGES_USER --password $DOCKERIMAGES_PASS https://dockerimages.fhcrc.org
    - docker push dockerimages.fhcrc.org/glam-browser-v2:latest
    - sleep 15
    - rancher-v0.6.2/rancher --url https://ponderosa.fhcrc.org --access-key $RANCHERAPI_KEY --secret-key $RANCHERAPI_SECRET up -d --pull --force-upgrade --confirm-upgrade --stack glam-browser-v2 --file docker-compose.yml --rancher-file rancher-compose.yml
  
